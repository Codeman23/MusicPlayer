{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","logo.svg","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","audioRef","songInfo","setSongInfo","currentSong","setCurrentSong","isPlaying","setIsPlaying","songs","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","durationTime","value","type","onChange","e","target","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","logo","faMusic","chillHop","uuidv4","audio","App","useRef","useState","data","timeUpdateHandler","duration","roundedCurrent","round","roundedDuration","roundedAnimation","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9800b8a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n  audioRef,\r\n  songInfo,\r\n  setSongInfo,\r\n  currentSong,\r\n  setCurrentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  songs,\r\n  setSongs,\r\n}) => {\r\n  //Event Handlers\r\n  const activeLibraryHandler = (nextPrev) => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === nextPrev.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  };\r\n\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"player__forvardBtn\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n    } else if (direction === \"player__backBtn\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        activeLibraryHandler(songs[songs.length - 1]);\r\n      } else {\r\n        await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n        activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n      }\r\n    }\r\n    //check if playing\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  //Add styles\r\n  const trackAnim = {\r\n    transform: `translateX( ${songInfo.animationPercentage}%)`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"player__timeControl\">\r\n        <p className=\"player__txt\">{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          className=\"player__rangeWrap\"\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\r\n          }}\r\n        >\r\n          <input\r\n            min={0}\r\n            max={songInfo.durationTime || 0}\r\n            value={songInfo.currentTime}\r\n            className=\"player__range\"\r\n            type=\"range\"\r\n            onChange={dragHandler}\r\n          />\r\n          <div style={trackAnim} className=\"player__rangeAnimate\"></div>\r\n        </div>\r\n        <p className=\"player__txt\">\r\n          {songInfo.durationTime ? getTime(songInfo.durationTime) : \"0:00\"}\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"player__control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => {\r\n            skipTrackHandler(\"player__backBtn\");\r\n          }}\r\n          className=\"player__backBtn\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"player__playBtn\"\r\n          size=\"2x\"\r\n          icon={!isPlaying ? faPlay : faPause}\r\n        />\r\n\r\n        <FontAwesomeIcon\r\n          onClick={() => {\r\n            skipTrackHandler(\"player__forvardBtn\");\r\n          }}\r\n          className=\"player__forvardBtn\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nconst Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song\">\r\n      <img\r\n        alt={currentSong.name}\r\n        className=\"song__cover\"\r\n        src={currentSong.cover}\r\n      />\r\n      <div className=\"song__desc\">\r\n        <h2 className=\"song__name\">{currentSong.name}</h2>\r\n        <h3 className=\"song__artist\">{currentSong.artist}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  setCurrentSong,\r\n  songs,\r\n  id,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n}) => {\r\n  //Handlers\r\n  const songSelectHandler = async () => {\r\n    await setCurrentSong(song);\r\n    //Add Active State\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n    //check if playing\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`librarySong ${song.active ? \"librarySong_active\" : \"\"}`}\r\n    >\r\n      <img alt={song.name} className=\"librarySong__cover\" src={song.cover} />\r\n      <div className=\"librarySong__desc\">\r\n        <h3 className=\"librarySong__name\">{song.name}</h3>\r\n        <h4 className=\"librarySong__artist\">{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"library_active\" : \"\"}`}>\r\n      <h2 className=\"library__title\">Songs</h2>\r\n      <div className=\"library__songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            songs={songs}\r\n            setCurrentSong={setCurrentSong}\r\n            song={song}\r\n            id={song.id}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","export default __webpack_public_path__ + \"static/media/logo.0233eddf.svg\";","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\nimport logo from \"./../logo.svg\"; //\r\n\r\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\r\n  return (\r\n    <nav className=\"navigation\">\r\n      <img className=\"navigation__logo\" src={logo} alt=\"logo\" />\r\n      <button\r\n        className=\"navigation__btn\"\r\n        onClick={() => {\r\n          setLibraryStatus(!libraryStatus);\r\n        }}\r\n      >\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Jazz Cabbage\",\r\n      artist: \"Ian Ewing, Strehlow\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/06/49f6e32ca521fbad46a1b281e3893cf6254bf11d-1024x1024.jpg\",\r\n      id: uuidv4(),\r\n      color: [\"#BA4A46\", \"#FDF0DD\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9363\",\r\n      active: \"active\",\r\n    },\r\n    {\r\n      name: \"Soulsounds\",\r\n      artist: \"Parkbench Epiphany\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2021/11/4c9682ee612a3b8ef51de286c49b5489408e9257-1024x1024.jpg\",\r\n      id: uuidv4(),\r\n      color: [\"#fa9a9c\", \"#007483\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=27500\",\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"la zona\",\r\n      artist: \"Maydee\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2021/11/3ff29a35be582c8dc0222273cb9c401ea6b209dc-1024x1024.jpg\",\r\n      id: uuidv4(),\r\n      color: [\"#5f90b4\", \"#adcbd9\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=8607\",\r\n      active: false,\r\n    },\r\n  ];\r\n}\r\n\r\nexport default chillHop;\r\n","import React, { useState, useRef } from \"react\";\n//Import Styles\nimport \"./styles/app.scss\";\n//Adding Components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n//Import data\nimport data from \"./data\";\n\nfunction App() {\n  //Place for js\n  //Ref\n  const audioRef = useRef(null);\n  //States\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    durationTime: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  //Handlers\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //Calculate percentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const roundedAnimation = Math.round(\n      (roundedCurrent / roundedDuration) * 100\n    );\n\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      durationTime: duration,\n      animationPercentage: roundedAnimation,\n    });\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n  return (\n    <div className={`App ${libraryStatus ? \"App_libraryActive\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        songs={songs}\n        setSongs={setSongs}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}